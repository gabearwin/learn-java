package xyz.gabear.learn.concurrent.two.chapter08;import java.util.concurrent.Exchanger;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;public class ExchangerTest {    private static final Exchanger<String> ex = new Exchanger<>();    private static ExecutorService threadPool = Executors.newFixedThreadPool(2);    public static void main(String[] args) {        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    String A = "银行流水数据A";// A录入银行流水数据                    String another = ex.exchange(A);                    System.out.println("在线程A中，得到对方的消息是：" + another);                } catch (InterruptedException e) {                    e.printStackTrace();                }            }        });        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    String B = "银行流水数据B";// B录入银行流水数据                    String another = ex.exchange(B);                    System.out.println("在线程B中，得到对方的消息是：" + another);                    System.out.println("线程A和线程B中数据是否一致:" + another.equals(B) + "\n线程A中录入的是:" + another + "\n线程B中录入的是:" + B);                } catch (InterruptedException e) {                    e.printStackTrace();                }            }        });        threadPool.shutdown();    }}/*在线程A中，得到对方的消息是：银行流水数据B在线程B中，得到对方的消息是：银行流水数据A线程A和线程B中数据是否一致:false线程A中录入的是:银行流水数据A线程B中录入的是:银行流水数据B*/// 当两个线程都达到同步点时，这两个线程可以交换数据。Exchanger可用于数据校对。