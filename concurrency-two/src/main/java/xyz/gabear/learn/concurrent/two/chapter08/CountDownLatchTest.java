package xyz.gabear.learn.concurrent.two.chapter08;import java.util.concurrent.CountDownLatch;public class CountDownLatchTest {    static CountDownLatch c = new CountDownLatch(2);    public static void main(String[] args) throws InterruptedException {        new Thread(new Runnable() {            @Override            public void run() {                System.out.println(1);                c.countDown();                System.out.println(2);                c.countDown();            }        }).start();        c.await();        System.out.println("3");    }}// 输出 1 2 3// await()方法会阻塞当前线程，直到N变成0 调用countDown()时N会减1// 如果这个例子中初始化构造方法中传入3，那么程序会输出1 2 并且主程序会阻塞在这里，不会停止